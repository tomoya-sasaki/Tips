{
  // "editor.wordWrap": "on", // "off" | "on" | "wordWrapColumn" | "bounded"
  // "editor.wordWrapColumn": 70,

  // Wraps after 70 characters
  // "rewrap.wrappingColumn": 70,

  // terminal scrollback
  "terminal.integrated.scrollback": 10000,

  "[quarto]": {
    // "editor.wordWrap": "bounded",
    // "editor.rulers": [70]
  },

  "workbench.colorTheme": "Monokai",
  "security.workspace.trust.untrustedFiles": "open",
  "quarto.mathjax.theme": "dark",

  "editor.codeActionsOnSave": {
  },


  "python.pythonPath": "/Users/tomoyasasaki/.pyenv/versions/py3.9/bin/python",
  "python.defaultInterpreterPath": "/Users/tomoyasasaki/.pyenv/versions/py3.9/bin/python",
  "python.terminal.executeInFileDir": true,
  "python.terminal.activateEnvironment": false,
  "python.terminal.activateEnvInCurrentTerminal": true,

  "r.alwaysUseActiveTerminal": true,
  // "r.bracketedPaste": true,
  "r.sessionWatcher": true,
  // "r.rterm.mac": "/Users/tomoyasasaki/Library/Python/3.9/bin/radian",


  "workbench.editorAssociations": {
      "*.ipynb": "jupyter-notebook"
  },

  "markdown.marp.themes": [
    "https://example.com/foo/bar/custom-theme.css",
    "./your-theme.css"
  ],

  "latex-workshop.latex.autoBuild.run": "never",
  "latex-workshop.view.pdf.viewer": "tab",
  "latex-workshop.view.pdf.zoom": "page-fit",

  "latex-workshop.latex.tools": [
      {
          "name": "bibtex",
          "command": "bibtex",
          "args": [
            "%DOCFILE%"
          ],
          "env": {}
        },
        {
          "name": "platex",
          "command": "platex",
          // "args": [
          //   "%DOCFILE%"
          // ],
          "env": {}
        },
        {
          "name": "dvipdfmx",
          "command": "dvipdfmx",
          // "args": [
          //   "%DOCFILE%"
          // ],
          "env": {}
        },
      {
          "name": "latexmk",
          "command": "latexmk",
          "args": [
              "-synctex=1",
              "-interaction=nonstopmode",
              // "-halt-on-error",
              "-file-line-error",
              "-pdf",
              "-outdir=%OUTDIR%",
              "%DOC%"
          ],
          "env": {}
      },
      {
          "name": "pdflatex",
          "command": "pdflatex",
          "args": [
              "-synctex=1",
              "-interaction=nonstopmode",
              "-file-line-error",
              "-pdf",
              "%DOC%"
          ]
      },
      {
          "name": "xelatex",
          "command": "xelatex",
          "args": [
              "-synctex=1",
              "-interaction=nonstopmode",
              "-file-line-error",
              "%DOC%"
          ]
      },
      {
        "name": "lualatex",
        "command": "lualatex",
        "args": [
            "-synctex=1",
            "-interaction=nonstopmode",
            "-file-line-error",
            "-pdf",
            "%DOC%"
        ]
      },
      {
          "name": "biber",
          "command": "biber",
          "args": [
              "%DOCFILE%"
          ]
      },
      {
        "name": "rnw2tex",
        "command": "Rscript",
        "args": [
          "-e",
          "knitr::opts_knit$set(concordance = TRUE); knitr::knit('%DOCFILE_EXT%')"
        ],
        "env": {}
      }
  ],
  "latex-workshop.latex.recipes": [
      {
          "name": "latexmk",
          "tools": [
            "latexmk"
          ]
      },
      {
        "name": "lualatex",
        "tools": [
          "lualatex"
        ]
    },
            {
          "name": "pdflatex",
          "tools": [
              "pdflatex"
          ]
      },
      {
          "name": "xelatex",
          "tools": [
              "xelatex"
          ]
      },
      {
          "name": "pdflatex -> bibtex -> pdflatex*2",
          "tools": [
              "pdflatex",
              "bibtex",
              "pdflatex",
              "pdflatex"
          ]
      },
      {
          "name": "pdflatex -> biber -> pdflatex*2",
          "tools": [
              "pdflatex",
              "biber",
              "pdflatex",
              "pdflatex"
          ]
      },
      {
          "name": "xelatex -> biber -> xelatex*2",
          "tools": [
              "xelatex",
              "biber",
              "xelatex",
              "xelatex"
          ]
      },
      {
          "name": "Compile Rnw files",
          "tools": [
            "rnw2tex",
            "latexmk"
          ]
        },
        {
          "name": "Rnw with pdflatex",
          "tools": [
            "rnw2tex",
            "pdflatex",
            "pdflatex"
          ]
        },
                {
          "name": "Rnw with pdflatex -> biber",
          "tools": [
            "rnw2tex",
            "pdflatex",
            "biber",
            "pdflatex",
            "pdflatex"
          ]
        },
        {
          "name": "Rnw with xelatex",
          "tools": [
            "rnw2tex",
            "xelatex"
          ]
        },
        {
          "name": "Rnw with lualatex",
          "tools": [
            "rnw2tex",
            "lualatex"
          ]
        },
        {
          "name": "Rnw with platex -> dvipdfmx",
          "tools": [
            "rnw2tex",
            "platex",
            "dvipdfmx"
          ]
        }
  ],

  "C_Cpp.commentContinuationPatterns": [
      "/**"
  ],


  // The number of spaces a tab is equal to. This setting is overridden
  // based on the file contents when `editor.detectIndentation` is true.
  "editor.tabSize": 2,

  // Insert spaces when pressing Tab. This setting is overriden
  // based on the file contents when `editor.detectIndentation` is true.
  "editor.insertSpaces": true,

  // When opening a file, `editor.tabSize` and `editor.insertSpaces`
  // will be detected based on the file contents. Set to false to keep
  // the values you've explicitly set, above.
  "editor.detectIndentation": false,
  "editor.minimap.enabled": false,

  "terminal.integrated.enableMultiLinePasteWarning": "never",
  "terminal.integrated.confirmOnExit": "always",
  "terminal.integrated.cwd": "${fileDirname}",
  "terminal.integrated.defaultLocation": "editor",

  "json.schemas": [

  ],
  // "workbench.colorTheme": "Monokai",
  "spellright.language": [
    "en"
  ],
  "spellright.documentTypes": [
    "markdown",
    "latex",
    "plaintext",
    "rsweave",
    "quarto",
    "Quarto"
  ],
  "spellright.parserByClass": {
    "rsweave": {
      "parser": "latex"
    },
    "quarto": {
      "parser": "markdown"
    }
  },
  "cSpell.enableFiletypes": [
    "rsweave"
  ],
  "workbench.iconTheme": "vscode-icons",
  "files.associations": {
    "*.rmd": "markdown"
  },
  "[python]": {
    "editor.formatOnType": true
  },
  "trailing-spaces.trimOnSave": true,
  "cSpell.maxNumberOfProblems": 1000,
  "cSpell.minWordLength": 3,

  "todohighlight.keywords": [
    "DEBUG:",
    "REVIEW:",
    {
        "text": "NOTE:",
        "color": "#ff0000",
        "backgroundColor": "yellow",
        "overviewRulerColor": "grey"
    },
    {
        "text": "HACK:",
        "color": "#000",
        "isWholeLine": false,
    },
    {
        "text": "TODO:",
        "color": "red",
        "border": "1px solid red",
        "borderRadius": "2px", //NOTE: using borderRadius along with `border` or you will see nothing change
        "backgroundColor": "rgba(0,0,0,.2)",
        //other styling properties goes here ...
    }
],
"git.openRepositoryInParentFolders": "always",
"window.zoomLevel": -1,
"github.copilot.advanced": {
  "editor.inlineSuggest.enabled": true
},
"github.copilot.enable": {
  "quarto": true,
  "*": true
},
"latex-workshop.latex.recipe.default": "lastUsed",
"files.trimTrailingWhitespace": true,
"github.copilot.editor.enableAutoCompletions": true,
"cSpell.enabledLanguageIds": [
  "asciidoc",
  "c",
  "cpp",
  "csharp",
  "css",
  "elixir",
  "erlang",
  "git-commit",
  "go",
  "graphql",
  "handlebars",
  "haskell",
  "html",
  "jade",
  "java",
  "javascript",
  "javascriptreact",
  "json",
  "jsonc",
  "jupyter",
  "latex",
  "less",
  "markdown",
  "php",
  "plaintext",
  "python",
  "pug",
  "restructuredtext",
  "rust",
  "scala",
  "scss",
  "scminput",
  "swift",
  "text",
  "typescript",
  "typescriptreact",
  "vue",
  "yaml",
  "yml",
  "quarto"
]
}
